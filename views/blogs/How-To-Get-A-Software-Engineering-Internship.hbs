<div class="blog"></div>
<h1 class="pad-left pad-right">The Definitive Guide to Getting a Software Engineering Internship</h1>
<div class="pad-left blog-heading"></div>
<h4 class="pad-left pad-right blog-subhead">A simple guide for how to get a software engineering internship</h4>
<img src="https://pbs.twimg.com/media/Du6h7p6X4AAtgC-.png" class="pad-left pad-right blog-image" />
<p class="pad-left pad-right blog-paragraph">
    There are so many resources out there for how to get a software engineering internship. I wanted to make a one stop video that tells you everything you need in a simple format.
    <br><br>

    There are 5 sections that I want to talk about:
    <br><br>
    <ul class="pad-left">
        <li>1. Resume</li>
        <li>2. Hard Skills</li>
        <li>3. Soft Skills</li>
        <li>4. Experience</li>
        <li>5. Doubt</li>
    </ul>
</p>
<p class="pad-left pad-right blog-paragraph">
    <br>
    Before we start, however, I want to say that anybody can get a software engineering internship. Be it at one of the top companies to a more local company, the benefits to getting an internship will be enormous.
    <br><br>
    You probably are aware that benefits are there for you, but if not, maybe check out the benefits to a software engineering internship.
    <br><br>
    So, without further ado, let's get into how to get a software engineering internship.
    <br><br>
</p>
<h2 class="pad-left pad-right">1. The Resume</h2>
<img src="https://images.vexels.com/media/users/3/149971/isolated/preview/4a93f65000dc00c1be0daedb7647d9e8-paper-sheet-3d-icon-by-vexels.png" class="pad-left pad-right blog-image" />
<p class="pad-left pad-right blog-paragraph">
    So you can be as talented as you want. You can be as passionate as someone can be. You can be the best possible candidate out there, but it isn’t going to matter if you can’t get the interview. Your resume is the first step toward getting an interview, and this will be the number 1 step of the process in which you get screened out.
    <br><br>
    You are doing yourself a disservice if your resume isn’t pristine. And I mean yeah, sure, you might not have the perfect experience. You have to figure out how to take what you DO have, and make it look impressive.
    <br><br>
    So, how do we do that?
    <br><br>
    Well, it's simple. Make sure your resume looks good. Search on Google, "Resume Templates," and go to the images section. You don't have to make your resume exactly like those, but it gives you a good idea on the general guidelines for a how a professional resume should look.
    <br><br>
    I have 5 sections on my resume. These sections are as follows:<br><br>
    - The Header<br>
    - Education<br>
    - Skills<br>
    - Work Experience<br>
    - Projects
    <br><br>
    You may have different sections based on what your experiences are, but these are the general sections you want. Probably the only other section you might consider is Honors and Activities. If you've received particularly strong awards, they are good to list. If you have leadership experience in clubs, those are good to list. For me, my experience with work and projects was stronger than my honors and activities, so I chose to omit those sections.
    <br><br>
    I've seen a lot of people recommend putting an objective or summary at the top of you resume, and I think that is a terrible idea.
    <br><br>
    They know that you're trying to obtain an internship; that's why you applied to the job. It's a waste of space to include that.
    <br><br>
    For the header, you'll want to include your name, phone number, email, and potentially the address, though that isn't as important. I also include a link to my GitHub and my LinkedIn, but that is because I keep those up to date and professional. If you don't, don't add them.
    <br><br>
    For the education section, it's pretty straightforward. List the major you are pursuing, your expected graduation date, and the college you are receiving it from. Only include your GPA if it is above a 3.0
    <br><br>
    For the skills section, list specific languages and technologies that you have experience with. I'm personally against rating them on a scale of "proficient" "advanced" and "intermediate", etc. Those scales never really mean anything because they're completely subjective. If you don't have an internship yet, then odds are you are not particularly advanced in anything. You also don't want to make yourself seem worse off by listing technologies as something that would make you seem inexperienced with it such as "beginner".
    <br><br>
    For the work experience section, list any paid jobs that you've had. If they aren't directly connected to tech, that is fine, but you want to make sure that your bullet points show strengths such as ability to learn, and ability to work effectively in a team.
    <br><br>
    If your work experience is in a field related to tech, that is perfect. Talk about real technologies you've used. You can list something in your skills section, but your work experience is where you can say exactly how you used it.
    <br><br>
    For creating bullet points, you have to say what you used, why, and what it accomplished. That is the simple format, but try it out. You might have trouble now, but you'll get better at describing your actions over time.
    <br><br>
    The projects section is where you make up for your lack of experience. Talk about specific coding projects that you have created. This shows that you have passion outside of the classroom, and you can have experience with more modern frameworks and technologies.
    <br><br>
    Projects look great on a resume, and they're also fun to work on. When I had an internship under my belt and I was interviewing for my second, I ended up talking more about my projects because people were interested in the things I did and it was unique. Projects show skills that not everyone will have.
    <br><br>
    Hopefully with this you are able to make a semi-decent resume. Your resume should constantly be evolving. Constantly review your bullet points and tighten up spots where it doesn't sound right.
    <br><br>
    Have other people review your resume. Read your resume out loud. If you aren't getting interviews, change up your resume a bit. Your resume is going to be the one thing that can enable you, but also block you, from getting an interview leading to a software engineering internship. And please, make sure your resume is only one page.
</p>

<h2 class="pad-left pad-right">2. Hard Skills</h2>
<img src="https://cdn3.iconfinder.com/data/icons/office-186/64/16_hard_skills_skill_portfolio_book_business_office-512.png" class="pad-left pad-right blog-image" />
<p class="pad-left pad-right blog-paragraph">
    So if you haven't heard already, in the tech world, there is something known as the technical interview.
    <br><br>
    In interviews, you're going to have to write code and solve problems. It's not fun, but the fact is that this is a facet of our industry.
    <br><br>
    You're going to need to know how to code. You're going to need to know how to solve the problems they give you.
    <br><br>
    Luckily, there are tons of resources out there for you. There are practice problems on LeetCode.com, and there are descriptions on how to improve in the book Cracking the Coding Interview by Gayle Laakmann McDowell.
    <br><br>
    Here's what you need to learn:
    <br><br>
    Data structures: Arrays, HashMaps, Trees, Graphs, LinkedLists, etc
    <br><br>
    Algorithms: Breadth First Traversal, Depth First Traversal are the main two you'll want to know. Any other algorithms will generally be what you have to figure out during the interview.
    <br><br>
    Specific Language Syntax: Know how to write code in the language you choose. If you can't initialize an object, they're going to know something is wrong.
    <br><br>
    You have to practice these problems in order to understand how to do them. Make sure you practice writing the answers by hand because many times in interviews, you will be required to write the solution on a white board.
    <br><br>
    You won't have autocomplete functions that an IDE might give you, so you're going to have to know when the method is .pop() or .remove().
    <br><br>
    The hard skills are straightforward in what you need, but the struggle is actually obtaining them. When you first start, you won't understand even the simplest problems, but over time, you WILL improve.
</p>

<h2 class="pad-left pad-right">3. Soft Skills</h2>
<img src="https://www.neuronup.com/img/ico_social_g.png" class="pad-left pad-right blog-image" />
<p class="pad-left pad-right blog-paragraph">
    You need to have good social skills. You have to be a strong communicator and show that you are confident.
    <br><br>
    Interviewers will be looking for this. They will be checking to see if you will fit in at the company. Will you be a pleasure to work with, or will you constantly annoy them?
    <br><br>
    Social skills aren't easy to come by, especially if you haven't practiced them before.
    <br><br>
    A common misconception about social skills is that if you aren't born with them, you will never have them. What people don't realize is that just like any other skill, you can practice them and get better.
    <br><br>
    You can improve your social skills.
    <br><br>
    Just like you would learn any other topic, you have to learn about the intracacies of the topic that make it what it is. There are tons of resources out there for improving your social skills, you just have to be willing to let your pride be hurt a little when you practice them.
</p>

<h2 class="pad-left pad-right">4. Experience</h2>
<img src="https://cdn-media-1.freecodecamp.org/images/1*m65pSHJeAAh9h1sygyJYLw.png" class="pad-left pad-right blog-image" />
<p class="pad-left pad-right blog-paragraph">
    I'm going to keep this section relatively short.
    <br><br>
    Experience is a good thing, and you should always strive to gain more experience, especially early on. Be it in a new job, or a new project, you want to be able to show that you've walked the walk and be able to talk the talk.
    <br><br>
    With that said, experience is not the end all be all. If you don't have the work experience you might want, you still have the ability to supplement it and improve with personal projects. You can fill in the gaps you have.
    <br><br>
    Make sure you start this sooner rather than later because experience is something that you build up over time.
    <br><br>
    There is a certain amount of time that you have to put into something before you can list it as experience, so make sure you get the experience before the interview.
</p>

<h2 class="pad-left pad-right">5. Doubt</h2>
<img src="https://img.pngio.com/doubt-png-107-images-in-collection-page-2-doubtpng-784_926.png" class="pad-left pad-right blog-image" />
<p class="pad-left pad-right blog-paragraph">
    I wanted this section to explain that getting a software engineering internship is hard.
    <br><br>
    You can have long nights where the LeetCode problems just aren't clicking. You can have interviews where your brain seemingly shut off.
    <br><br>
    You have to keep going.
    <br><br>
    You have to know that eventually you will make it. It might not be exactly what you expected, but thats ok. Sometimes in life, things will turn out differently than you wanted, but at the end of the day, the sun still sets, and then rises the following morning.
    <br><br>
    When I first started applying to internships, I experienced rejection after rejection. I began to doubt myself. You can't let those thoughts creep up.
    <br><br>
    You can do it. It isn't easy, but you can do it.
    <br><br>
    When you get knocked down, get back up again. Keep going at it, and eventually you'll be able to finally sit back and know that you're in the place you want to be.
    <br><br>
    So I wish you good luck in your efforts to get a software engineering internship! I believe in you. If you have any additional questions, concerns, or want me to review your resume, reach out in the contact form.
    <br><br>
    -Daniel
</p>
